/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package e_actualizar;

import b_utilidades.TablaSwing;
import c_clases.UsuarioDAO;
import c_clases.UsuarioPOJO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

/**
 *
 * @author Abi
 */
public class VentanaActualizarB extends javax.swing.JFrame {

    /**
     * Creates new form VentanaActualizar
     */
    public VentanaActualizarB() {
        initComponents();

        String consultaSQL = "SELECT id_usuario, nombre, contrasena FROM usuario;";
        TablaSwing.llenarTabla(tablaUsuarios, consultaSQL);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollTablaUsuarios = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        etiquetaMensaje = new javax.swing.JLabel();
        etiquetaNombre = new javax.swing.JLabel();
        campoNombre = new javax.swing.JTextField();
        etiquetaContrasena = new javax.swing.JLabel();
        campoContrasena = new javax.swing.JTextField();
        botonActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id_usuario", "nombre", "contrasena"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollTablaUsuarios.setViewportView(tablaUsuarios);
        EventoTabla elEventoTabla = new EventoTabla();

        tablaUsuarios.addMouseListener(elEventoTabla);

        getContentPane().add(scrollTablaUsuarios);
        scrollTablaUsuarios.setBounds(30, 60, 540, 140);

        etiquetaMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        etiquetaMensaje.setText("USUARIOS");
        getContentPane().add(etiquetaMensaje);
        etiquetaMensaje.setBounds(210, 20, 120, 14);

        etiquetaNombre.setText("Nombre");
        getContentPane().add(etiquetaNombre);
        etiquetaNombre.setBounds(100, 240, 80, 20);
        getContentPane().add(campoNombre);
        campoNombre.setBounds(200, 240, 120, 20);

        etiquetaContrasena.setText("Contrasena");
        getContentPane().add(etiquetaContrasena);
        etiquetaContrasena.setBounds(100, 290, 70, 14);
        getContentPane().add(campoContrasena);
        campoContrasena.setBounds(200, 280, 120, 20);

        botonActualizar.setText("Actualizar");
        getContentPane().add(botonActualizar);
        botonActualizar.setBounds(380, 250, 120, 23);
        EventoActualizar elEventoActualizar = new EventoActualizar();

        botonActualizar.addActionListener(elEventoActualizar);

        setSize(new java.awt.Dimension(612, 392));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaActualizarB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActualizar;
    private javax.swing.JTextField campoContrasena;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JLabel etiquetaContrasena;
    private javax.swing.JLabel etiquetaMensaje;
    private javax.swing.JLabel etiquetaNombre;
    private javax.swing.JScrollPane scrollTablaUsuarios;
    private javax.swing.JTable tablaUsuarios;
    // End of variables declaration//GEN-END:variables

    /* Crear clase interna */
    private class EventoTabla implements MouseListener {

        @Override
        public void mouseClicked(MouseEvent e) {

            int idUsuario = TablaSwing.getId(tablaUsuarios);

            if (idUsuario > 0) {

                /* Obtener los datos del usuario de acuerdo al id */
                UsuarioDAO elUsuarioDAO = new UsuarioDAO();

                UsuarioPOJO usuario = elUsuarioDAO.getUsuario(idUsuario);

                /* Colocar los datos del usuario en los campos */
                campoNombre.setText(usuario.getNombre());
                campoContrasena.setText(usuario.getContrasena());

            }
        }

        @Override
        public void mousePressed(MouseEvent e) {

        }

        @Override
        public void mouseReleased(MouseEvent e) {

        }

        @Override
        public void mouseEntered(MouseEvent e) {

        }

        @Override
        public void mouseExited(MouseEvent e) {

        }

    }

    private class EventoActualizar implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            
            /* Obtener el id */
            int idUsuario = TablaSwing.getId(tablaUsuarios);

            if (idUsuario > 0) {

                /* Crear las clases POJO y DAO */
                UsuarioPOJO elUsuarioPOJO = new UsuarioPOJO();
                UsuarioDAO elUsuarioDAO = new UsuarioDAO();

                /* obtener los datos de los campos */
                String nombreNuevo = campoNombre.getText();
                String contrasenaNueva = campoContrasena.getText();

                /* Colocar los nuevos datos para actualizar */
                elUsuarioPOJO.setNombre(nombreNuevo);
                elUsuarioPOJO.setContrasena(contrasenaNueva);

                /* Actualizar */
                elUsuarioDAO.actualizar(idUsuario, elUsuarioPOJO);

                /* Llenar la tabla */
                String consultaSQL = "SELECT id_usuario, nombre, contrasena FROM usuario;";
                TablaSwing.actualizarTabla(tablaUsuarios, consultaSQL);

                /* Limpiar los campos */
                campoNombre.setText("");
                campoContrasena.setText("");

            }
            
        }

    }

}
